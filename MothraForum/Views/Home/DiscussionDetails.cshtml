@using Microsoft.AspNetCore.Identity
@model MothraForum.Models.Discussion

@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager
@{
    var user = await UserManager.GetUserAsync(User);
}

@{
    ViewData["Title"] = Model.Title;
}

<div class="container">
    <div class="rounded-4 p-5 text-white text-start">


        <div class="row">
            <div class="col-12 justify-content-start text-start">
                <div>
                    <a href="@Url.Action("Profile", "Home", new { id = Model.ApplicationUserId })" class="text-white text-start">
                    @if (Model.User?.ImageFilename != null)
                    {
                        <img src="@Url.Content("~/images/" + Model.User.ImageFilename)" alt="@Model.User.Name" class="rounded-circle" style="width: 50px; height: 50px; object-fit: cover;">
                    }
                    else
                    {
                        <img src="@Url.Content("~/images/image.jpg")" alt="@Model.User.Name" class="rounded-circle" style="width: 50px; height: 50px; object-fit: cover;">
                    }
                    &nbsp; @Model.User.Name</a>
                </div>
            </div>
        </div>
        


        <h2>@Model.Title</h2>
        <p class="small text-secondary">@Model.CreatedAt</p>

        @if (!string.IsNullOrEmpty(Model.ImageFilename))
        {
            <div class="col-12 mb-3">
                <img src="@Url.Content("~/images/" + Model.ImageFilename)" alt="@Model.Title" class="img-fluid">
            </div>
        }

        <p class="mt-3">@Model.Content</p>

        <div class="row">
            <div class="col-6 d-flex align-items-center">
                <form method="post" asp-controller="Vote" asp-action="Create" asp-route-discussionId="@Model.DiscussionId" asp-route-value="1" class="d-inline">
                    <button type="submit" class="btn btn-black">
                        <i class="text-danger fa-solid fa-2x fa-angle-up"></i>
                    </button>
                </form>

                @Model.Votes.Sum(v => v.Value)

                <form method="post" asp-controller="Vote" asp-action="Create" asp-route-discussionId="@Model.DiscussionId" asp-route-value="-1" class="d-inline">
                    <button type="submit" class="btn btn-black">
                        <i class="fa-solid text-info fa-2x fa-angle-down"></i>
                    </button>
                </form>
            </div>

            <div class="col-6 d-flex align-items-center text-end pe-5 justify-content-end">
                
                @if (SignInManager.IsSignedIn(User) && Model.ApplicationUserId == user.Id)
                {
                    <h4>
                        <a class="text-decoration-none" href="@Url.Action("Edit", "Discussion", new { id = Model.DiscussionId })"><i class="fa-solid text-warning pe-4 fa-pencil"></i></a>
                    </h4>
                    <form method="post" asp-controller="Discussion" asp-action="Delete" asp-route-id="@Model.DiscussionId" class="d-inline" onsubmit="return confirmDelete()">
                        <button type="submit" class="btn btn-black">
                            <h4><i class="fa-solid text-danger fa-trash"></i></h4>
                        </button>
                    </form>

                    <script>
                        function confirmDelete() {
                            return confirm('Delete "@Html.Raw(Model.Title)"?');
                        }
                    </script>
                }
            </div>
        </div>

        <hr class="my-3" />

        <h4>Comments</h4>
        <form method="post" asp-controller="Comment" asp-action="AddComment" class="mt-4">
            <input type="hidden" name="discussionId" value="@Model.DiscussionId" />
            <div class="mb-3">
                <textarea class="form-control bg-dark text-white" name="content" rows="3" placeholder="Add a comment..." required></textarea>
            </div>
            <button type="submit" class="btn btn-primary">Comment</button>
        </form>


        <hr class="p4" />

        @foreach (var comment in Model.Comments)
        {
            <div class="my-2 px-1">
                <p class="small text-secondary">
                    @if (comment.User != null)
                    {
                        <a class="link-light" href="@Url.Action("Profile", "Home", new { id = comment.ApplicationUserId })">
                            @comment.User.Name
                        </a>
                    }
                    else
                    {
                        <span>Unknown User</span>
                    }
                    - @comment.CreatedAt
                </p>
                <p>@comment.Content</p>
            </div>
            <hr class="p4" />
        }
    </div>
</div>
